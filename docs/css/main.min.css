/***
    The new CSS reset - version 1.5.0 (last updated 1.3.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */

*:where(:not(iframe, canvas, img, svg, video):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */

a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */

ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */

img {
  max-width: 100%;
}

/* removes spacing between cells in tables */

table {
  border-collapse: collapse;
}

/* revert the 'white-space' property for textarea elements on Safari */

textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */

meter {
  -webkit-appearance: revert;
  -moz-appearance: revert;
  appearance: revert;
}

/* reset default text opacity of input placeholder */

::-webkit-input-placeholder {
  color: unset;
}

::-moz-placeholder {
  color: unset;
}

:-ms-input-placeholder {
  color: unset;
}

::-ms-input-placeholder {
  color: unset;
}

::placeholder {
  color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */

:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly. */

:where([contenteditable]) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
}

/* apply back the draggable feature - exist only in Chromium and Safari */

:where([draggable="true"]) {
  -webkit-user-drag: element;
}

html {
  font-size: 10px;
}

p {
  font: normal 400 2.2rem/1.36 "Open Sans", sans-serif;
  color: #454545;
}

.container {
  max-width: 1600px;
  padding: 0 10px;
  margin: 0 auto;
}

.section-head__subtitle {
  font: normal 700 4.6rem "Mulish", sans-serif;
  letter-spacing: 0.05em;
  color: #7d7d7d;
}

.section-head__title {
  font: normal 400 9rem "Lobster", cursive;
  letter-spacing: 0.07em;
  color: #332F29;
  margin-left: 48px;
}

.burger-menu__ {
  position: relative;
}

.burger-menu__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  z-index: 1;
}

.burger-menu____list--active {
  position: absolute;
  overflow: auto;
}

.burger-menu__btn {
  display: block;
  position: relative;
  cursor: pointer;
}

.burger-menu__btn::before,
.burger-menu__btn::after {
  content: "";
  position: absolute;
  width: 100%;
}

.burger-menu__btn::before {
  top: 0;
}

.burger-menu__btn::after {
  bottom: 0;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.burger-menu__btn span {
  position: absolute;
  width: 100%;
}

body.lock {
  overflow: hidden;
}

.burger-menu {
  margin: 0 45px 0 auto;
}

.burger-menu__btn {
  display: none;
  width: 40px;
  height: 25px;
}

.burger-menu__btn::before,
.burger-menu__btn::after {
  background: #332F29;
  height: 3px;
  left: 0;
  -webkit-transition: all 0.3s ease 0s;
  -o-transition: all 0.3s ease 0s;
  transition: all 0.3s ease 0s;
}

.burger-menu__btn span {
  background: #332F29;
  height: 3px;
  left: 0;
  top: 11px;
}

.burger-menu__btn--active::before {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  top: 11px;
}

.burger-menu__btn--active::after {
  -webkit-transform: rotate(315deg);
  -ms-transform: rotate(315deg);
  transform: rotate(315deg);
  bottom: 11px;
}

.burger-menu__btn--active span {
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.burger-menu__list {
  font: normal 400 2.8rem "Mulish", sans-serif;
  color: #332F29;
}

.burger-menu__item {
  width: 119px;
  text-align: center;
}

.burger-menu__item:hover {
  font-weight: 700;
  text-decoration: underline;
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s;
}

.header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.header__logo {
  width: 160px;
  margin: 10px 0 0 50px;
}

.header__logo svg {
  width: 100%;
  height: 100%;
}

.header__menu-wrapper {
  margin: 0 auto;
  min-width: 500px;
}

.hero {
  overflow: hidden;
  padding: 50px 0 100px;
}

.hero__wrapper {
  position: relative;
}

.hero__section-head {
  position: absolute;
  top: 50px;
}

.hero__img {
  max-width: 600px;
  max-height: 720px;
  float: right;
  margin-left: 80px;
}

.hero img {
  width: 100%;
}

.hero__text {
  max-width: 800px;
  padding-top: 235px;
  text-indent: 25px;
}

.hero__text-par {
  margin-top: 15px;
}

.about {
  background: #E3DCD2;
  overflow: hidden;
  padding: 100px 0 100px;
}

.about__wrapper {
  position: relative;
}

.about__section-head {
  position: absolute;
  top: 50px;
  right: 0;
}

.about__img {
  max-width: 600px;
  max-height: 720px;
  float: left;
  margin-right: 80px;
}

.about img {
  width: 100%;
  height: 100%;
}

.about__text {
  max-width: 800px;
  padding-top: 235px;
  margin: 0 0 0 auto;
  text-indent: 25px;
}

.about__text-par {
  margin-top: 15px;
}

@supports (-webkit-appearance:none) {

}

@media screen and (max-width: 1280px) {
  p {
    font-size: 2rem;
  }

  .section-head__subtitle {
    font-size: 3.4rem;
  }

  .section-head__title {
    font-size: 8rem;
  }

  .burger-menu {
    margin: 0 30px 0 auto;
  }

  .burger-menu__list {
    font-size: 2.4rem;
  }

  .header__logo {
    width: 130px;
    margin: 10px 0 0 30px;
  }

  .header__menu-wrapper {
    margin: 0 0 0 auto;
    min-width: 450px;
  }

  .hero {
    padding: 30px 0 50px;
  }

  .hero__section-head {
    position: initial;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    margin: 0 auto 30px;
  }

  .hero__img {
    max-width: 47%;
    float: right;
    margin-left: 50px;
  }

  .hero__text {
    padding-top: 5px;
    text-indent: 20px;
  }

  .hero__text-par {
    margin-top: 10px;
  }

  .about {
    padding: 50px 0 50px;
  }

  .about__section-head {
    position: initial;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    margin: 0 auto 30px;
  }

  .about__img {
    max-width: 47%;
    float: left;
    margin-right: 50px;
  }

  .about__text {
    padding-top: 5px;
    text-indent: 20px;
  }

  .about__text-par {
    margin-top: 10px;
  }

@supports (-webkit-appearance:none) {

}
}

@media screen and (max-width: 768px) {
  body {
    overflow-x: hidden;
  }

  p {
    font-size: 1.8rem;
  }

  .section-head__subtitle {
    font-size: 2.8rem;
  }

  .section-head__title {
    font-size: 6rem;
  }

  .header__logo {
    width: 80px;
    margin: 5px 0 0 30px;
  }

  .header__menu-wrapper {
    margin: 0 0 0 auto;
    min-width: auto;
  }

  .hero {
    padding: 20px 0 40px;
  }

  .hero__section-head {
    margin: 0 auto 20px;
  }

  .hero__img {
    margin-left: 20px;
  }

  .hero__text-par {
    margin-top: 5px;
  }

  .about {
    padding: 20px 0 40px;
  }

  .about__section-head {
    margin: 0 auto 20px;
  }

  .about__img {
    margin-right: 20px;
  }

  .about__text-par {
    margin-top: 5px;
  }

@supports (-webkit-appearance:none) {

}
}

@media only screen and (max-width: 768px) {
  .burger-menu__btn {
    display: block;
  }

  .burger-menu__list {
    position: absolute;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    left: -300px;
    top: 64px;
    width: 250px;
    height: 60vh;
    background-color: #ffffff;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding-top: 50px;
  }

  .burger-menu__item {
    margin-bottom: 30px;
  }

  .burger-menu__list--active {
    left: 0px;
    -webkit-transition: all 0.5s;
    -o-transition: all 0.5s;
    transition: all 0.5s;
  }

@supports (-webkit-appearance:none) {

}
}

@media screen and (max-width: 425px) {
  p {
    font-size: 1.6rem;
  }

  .section-head__subtitle {
    font-size: 2rem;
  }

  .section-head__title {
    font-size: 4.2rem;
  }

  .text--rolled::before {
    content: "Roll down";
    position: absolute;
    width: 130px;
    height: 20px;
    font-size: 2rem;
    font-weight: 700;
    bottom: 0;
    right: 35px;
  }

  .text--rolled::after {
    content: "";
    position: absolute;
    width: 20px;
    height: 20px;
    bottom: 0;
    right: 10px;
    background-image: url("../img/roll-icon.svg");
    background-size: cover;
  }

  .text--unrolled::before {
    content: "Roll up";
    position: absolute;
    width: 100px;
    height: 20px;
    font-size: 2rem;
    font-weight: 700;
    bottom: 0;
    right: 35px;
  }

  .text--unrolled::after {
    content: "";
    position: absolute;
    width: 20px;
    height: 20px;
    bottom: -3px;
    right: 10px;
    background-image: url("../img/roll-icon.svg");
    background-size: cover;
    -webkit-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg);
  }

  .header__logo {
    width: 80px;
    margin: 5px 0 0 15px;
  }

  .header__menu-wrapper {
    margin: 0 0 0 auto;
    min-width: auto;
  }

  .hero {
    padding: 20px 0 20px;
  }

  .hero__section-head {
    margin: 0 auto 15px;
  }

  .hero__img {
    float: none;
    max-width: 67%;
    display: block;
    margin: 0 auto;
  }

  .hero__text-par--toggle {
    display: none;
  }

  .hero__text {
    padding-top: 10px;
    padding-bottom: 20px;
    position: relative;
  }

  .about {
    padding: 20px 0 20px;
  }

  .about__section-head {
    margin: 0 auto 15px;
  }

  .about__img {
    float: none;
    max-width: 67%;
    display: block;
    margin: 0 auto;
  }

  .about__text {
    padding-top: 10px;
    padding-bottom: 20px;
    position: relative;
  }

  .about__text-par--toggle {
    display: none;
  }

@supports (-webkit-appearance:none) {

}
}

@media only screen and (max-width: 425px) {
  .burger-menu {
    margin: 0 15px 0 auto;
  }

@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */